


.load nmt.qnt
import nmt.*
val proof = {start: 1, end: 3, supporting_hashes: [["h"],["k"],["c"]]}
val rootHash = ["h", "i", "j", "k", "c"]
val leaves = [{value:"i", namespaceId: 2}, {value: "j", namespaceId: 2}]
MerkleInclusion(proof, rootHash, leaves)


.load nmt.qnt
import nmt.*
val proof = {start: 0, end: 1, supporting_hashes: [["i"],["e"],["c"]]}
val rootHash = ["h", "i", "e", "c"]
val leaves = [{value:"h", namespaceId: 1}]
MerkleInclusion(proof, rootHash, leaves)


.load nmt.qnt
import nmt.*
val proof = {start: 3, end: 5, supporting_hashes: [["d"],["j"],["m"], ["g"]]}
val rootHash = ["d", "j", "k", "l", "m", "g"]
val leaves = [{value:"k", namespaceId: 3}, {value: "l", namespaceId: 3}]
MerkleInclusion(proof, rootHash, leaves)


.load nmt.qnt
import nmt.*
val proof = {start: 5, end: 8, supporting_hashes: [["b"],["l"]]}
val rootHash = ["b", "l", "m", "n", "o"]
val leaves = [{value:"m", namespaceId: 4}, {value: "n", namespaceId: 4},{value: "o", namespaceId: 4}]
MerkleInclusion(proof, rootHash, leaves)